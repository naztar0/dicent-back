openapi: 3.0.0
info:
  description: App that allows to transcribe speech to text
  version: 1.0.0
  title: Dicent
  contact:
    email: hello@neulen.dev
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: auth
    description: Operations with authentication
  - name: users
    description: Operations about user
  - name: projects
    description: Access to users projects
  - name: transcribes
    description: Project's transcribes
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register new user
      description: ""
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
        description: Created user object
        required: true
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /auth/login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
        description: User object
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            Set-cookie:
              description: Cookies with access token
              schema:
                type: string
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoggedIn"
        "401":
          description: Invalid username/password supplied
  /auth/logout:
    post:
      tags:
        - auth
      summary: Logs out current logged in user session
      description: ""
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  /me:
    get:
      tags:
        - users
      summary: Get an authorized user
      description: ""
      operationId: getMe
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Permission denied
  /users:
    get:
      tags:
        - users
      summary: Get all users
      description: Only for admins.
      operationId: getUsers
      parameters:
        - in: query
          name: ordDate
          description: Sort by date
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: search
          description: Filter by name
          schema:
            type: string
        - in: query
          name: role
          description: Filter by role
          schema:
            type: string
            enum:
              - USER
              - ADMIN
        - in: query
          name: page
          description: Page number
          schema:
            type: integer
        - in: query
          name: perPage
          description: Items on the page
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "401":
          description: Permission denied
  "/users/{id}":
    get:
      tags:
        - users
      summary: Get user by user id
      description: ""
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Permission denied
        "404":
          description: User not found
    patch:
      tags:
        - users
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
        description: Updated user object
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Permission denied
        "404":
          description: User not found
    delete:
      tags:
        - users
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        "401":
          description: Permission denied
        "404":
          description: User not found
  "/users/{id}/projects":
    get:
      tags:
        - users
      summary: Get user projects
      description: ""
      operationId: getUserProjects
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            type: integer
        - in: query
          name: ordDate
          description: Sort by date
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: search
          description: Filter by title
          schema:
            type: string
        - in: query
          name: status
          description: Filter by status
          schema:
            type: string
            enum:
              - NONE
              - QUEUED
              - IN_PROGRESS
              - FAILED
              - COMPLETED
        - in: query
          name: group
          description: Filter by group id
          schema:
            type: integer
        - in: query
          name: speakersFrom
          description: Filter by speakers num from
          schema:
            type: integer
        - in: query
          name: speakersTo
          description: Filter by speakers num to
          schema:
            type: integer
        - in: query
          name: page
          description: Page number
          schema:
            type: integer
        - in: query
          name: perPage
          description: Items on the page
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectDemo"
        "401":
          description: Permission denied
        "404":
          description: User not found
  "/users/{id}/project":
    post:
      tags:
        - users
      summary: Add a new project to the user
      description: ""
      operationId: userAddProject
      parameters:
        - name: id
          in: path
          description: ID of project
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/json:
            schema:
              $ref: "#/components/schemas/ProjectDemo"
        description: Created project object
        required: true
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDemo"
        "401":
          description: Permission denied
        "404":
          description: User not found
  /projects:
    get:
      tags:
        - projects
      summary: Get all projects
      description: Only for admins.
      operationId: getProject
      parameters:
        - in: query
          name: ordDate
          description: Sort by date
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: search
          description: Filter by title
          schema:
            type: string
        - in: query
          name: status
          description: Filter by status
          schema:
            type: string
            enum:
              - NONE
              - QUEUED
              - IN_PROGRESS
              - FAILED
              - COMPLETED
        - in: query
          name: group
          description: Filter by group id
          schema:
            type: integer
        - in: query
          name: speakersFrom
          description: Filter by speakers num from
          schema:
            type: integer
        - in: query
          name: speakersTo
          description: Filter by speakers num to
          schema:
            type: integer
        - in: query
          name: page
          description: Page number
          schema:
            type: integer
        - in: query
          name: perPage
          description: Items on the page
          schema:
            type: integer
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectDemo"
    post:
      tags:
        - projects
      summary: Add a new project to the user
      description: Only for authorized users.
      operationId: addProject
      parameters:
        - in: query
          name: user_id
          description: Attach to user_id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDemo"
        description: Project object that needs to be added to the user
        required: true
      responses:
        "200":
          description: Successfully created
  "/projects/{id}":
    get:
      tags:
        - projects
      summary: Get project by id
      description: Only for authorized users.
      operationId: getProjectById
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
    patch:
      tags:
        - projects
      summary: Update an existing project
      description: Only for authorized users.
      operationId: updateProject
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDemo"
        description: Project object that needs to be modyfied
        required: true
      responses:
        "403":
          description: Permission denied
        "404":
          description: Project not found
    delete:
      tags:
        - projects
      summary: Delete an existing project
      description: Only for authorized users.
      operationId: deleteeProject
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted.
          required: true
          schema:
            type: integer
      responses:
        "403":
          description: Permission denied
  "/projects/{id}/audiofile":
    post:
      tags:
        - projects
      summary: Uploads an audiofile
      description: ""
      operationId: uploadFile
      parameters:
        - name: id
          in: path
          description: ID of project to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: file to upload
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "403":
          description: Permission denied
        "404":
          description: Project not found
  "/projects/{id}/transcribes":
    get:
      tags:
        - projects
      summary: Get project transcribes
      description: ""
      operationId: projectTranscribes
      parameters:
        - name: id
          in: path
          description: ID of project
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transcribe"
        "403":
          description: Permission denied
        "404":
          description: Project not found
  "/projects/{id}/transcribe":
    post:
      tags:
        - projects
      summary: Add a new transcribe to the project
      description: ""
      operationId: projectAddTranscribe
      parameters:
        - name: id
          in: path
          description: ID of project
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/json:
            schema:
              $ref: "#/components/schemas/Transcribe"
        description: Created transcribe object
        required: true
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transcribe"
        "403":
          description: Permission denied
        "404":
          description: Project not found
  "/transcribes/{id}":
    get:
      tags:
        - transcribes
      summary: Get transcribe by id
      description: Only for authorized users.
      operationId: getTranscribeById
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transcribe"
    patch:
      tags:
        - transcribes
      summary: Update an existing transcribe
      description: Only for authorized users.
      operationId: updateTranscribe
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transcribe"
        description: Project object that needs to be modyfied
        required: true
      responses:
        "403":
          description: Permission denied
        "404":
          description: Project not found
    delete:
      tags:
        - transcribes
      summary: Delete an existing transcribe
      description: Only for authorized users.
      operationId: deleteTranscribe
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted.
          required: true
          schema:
            type: integer
      responses:
        "403":
          description: Permission denied
  "/groups":
    get:
      tags:
        - groups
      summary: Get user groups
      description: Only for authorized users.
      operationId: getGroups
      parameters:
        - in: query
          name: user_id
          description: Attach to user_id
          schema:
            type: integer
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
    post:
      tags:
        - groups
      summary: Create user group
      description: Only for authorized users.
      operationId: addGroup
      parameters:
        - in: query
          name: user_id
          description: Attach to user_id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
        description: Project object that needs to be added to the user
        required: true
      responses:
        "200":
          description: Successfully created
  "/groups/{id}":
    delete:
      tags:
        - groups
      summary: Delete an existing group
      description: Only for authorized users.
      operationId: deleteGroup
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted.
          required: true
          schema:
            type: integer
      responses:
        "403":
          description: Permission denied
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://127.0.0.1/api
  - url: http://127.0.0.1
components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
    Transcribe:
      type: object
      properties:
        id:
          type: integer
          format: int64
        speaker:
          type: string
        cotent:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - user
            - admin
    UserRegister:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - user
            - admin
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    UserLoggedIn:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - user
            - admin
        access_token:
          type: string
    Project:
      type: object
      required:
        - title
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        group:
          type: string
        speakers:
          type: integer
        job:
          type: string
        status:
          enum:
            - NONE
            - QUEUED
            - IN_PROGRESS
            - FAILED
            - COMPLETED
        audiofile:
          type: string
          description: Link to the audiofile
        transcribes:
          type: array
          items:
            $ref: "#/components/schemas/Transcribe"
    ProjectDemo:
      type: object
      required:
        - title
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        group:
          type: string
        speakers:
          type: integer
        job:
          type: string
        status:
          enum:
            - NONE
            - QUEUED
            - IN_PROGRESS
            - FAILED
            - COMPLETED
        audiofile:
          type: string
          description: Link to the audiofile
